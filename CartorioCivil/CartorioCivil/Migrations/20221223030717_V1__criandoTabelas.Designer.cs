// <auto-generated />
using System;
using CartorioCivil.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CartorioCivil.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20221223030717_V1__criandoTabelas")]
    partial class V1criandoTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CartorioCivil.Modelos.Conjuge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CpfMae")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CpfPai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimentoMae")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimentoPai")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("casamentoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("casamentoId");

                    b.ToTable("Conjuges");
                });

            modelBuilder.Entity("CartorioCivil.Modelos.Registros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("casamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("nascimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("obitoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("casamentoId");

                    b.HasIndex("nascimentoId");

                    b.HasIndex("obitoId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("CartorioCivil.Models.Casamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCasamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Casamentos");
                });

            modelBuilder.Entity("CartorioCivil.Models.Nascimento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cpfMae")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cpfPai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("nascimentoMae")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("nascimentoPai")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("nomeMae")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nomePai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nomeRegistrado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Nascimentos");
                });

            modelBuilder.Entity("CartorioCivil.Models.Obito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimentoMae")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimentoPai")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataObito")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeFalecido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Obitos");
                });

            modelBuilder.Entity("CartorioCivil.Modelos.Conjuge", b =>
                {
                    b.HasOne("CartorioCivil.Models.Casamento", "casamento")
                        .WithMany("conjuges")
                        .HasForeignKey("casamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("casamento");
                });

            modelBuilder.Entity("CartorioCivil.Modelos.Registros", b =>
                {
                    b.HasOne("CartorioCivil.Models.Casamento", "casamento")
                        .WithMany()
                        .HasForeignKey("casamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CartorioCivil.Models.Nascimento", "nascimento")
                        .WithMany()
                        .HasForeignKey("nascimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CartorioCivil.Models.Obito", "obito")
                        .WithMany()
                        .HasForeignKey("obitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("casamento");

                    b.Navigation("nascimento");

                    b.Navigation("obito");
                });

            modelBuilder.Entity("CartorioCivil.Models.Casamento", b =>
                {
                    b.Navigation("conjuges");
                });
#pragma warning restore 612, 618
        }
    }
}
